plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
}

// Load API keys from apikey.properties file
def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

// Helper function to get API key with default value
def getApiKey(properties, key, defaultValue = "") {
    def value = properties.getProperty(key)
    if (value == null || value.isEmpty() || value == "YOUR_${key}_HERE") {
        return "\"$defaultValue\""
    }
    return value
}

android {
    compileSdk 34
    namespace "com.example.learnbrowser"

    signingConfigs {
        release {
            storeFile file("../keystore/release.keystore")
            storePassword "learnbrowser"
            keyAlias "learnbrowser"
            keyPassword "learnbrowser"
        }
    }

    defaultConfig {
        applicationId "com.example.learnbrowser"  // Changed back to original package name
        minSdk 31  // Changed from 33 to 31 to support Android 12
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            
            // API keys for translation services
            buildConfigField "String", "GOOGLE_TRANSLATE_API_KEY", getApiKey(apikeyProperties, 'GOOGLE_TRANSLATE_API_KEY')
            buildConfigField "String", "LIBRE_TRANSLATE_API_KEY", getApiKey(apikeyProperties, 'LIBRE_TRANSLATE_API_KEY')
            buildConfigField "String", "LIBRE_TRANSLATE_ENDPOINT", getApiKey(apikeyProperties, 'LIBRE_TRANSLATE_ENDPOINT', "https://libretranslate.com/translate")
            buildConfigField "String", "DEEPL_API_KEY", getApiKey(apikeyProperties, 'DEEPL_API_KEY')
            buildConfigField "String", "MICROSOFT_TRANSLATOR_API_KEY", getApiKey(apikeyProperties, 'MICROSOFT_TRANSLATOR_API_KEY')
            buildConfigField "String", "YANDEX_TRANSLATE_API_KEY", getApiKey(apikeyProperties, 'YANDEX_TRANSLATE_API_KEY')
            
            // For backward compatibility
            buildConfigField "String", "TRANSLATE_API_KEY", getApiKey(apikeyProperties, 'GOOGLE_TRANSLATE_API_KEY')
        }
        debug {
            // API keys for translation services
            buildConfigField "String", "GOOGLE_TRANSLATE_API_KEY", getApiKey(apikeyProperties, 'GOOGLE_TRANSLATE_API_KEY')
            buildConfigField "String", "LIBRE_TRANSLATE_API_KEY", getApiKey(apikeyProperties, 'LIBRE_TRANSLATE_API_KEY')
            buildConfigField "String", "LIBRE_TRANSLATE_ENDPOINT", getApiKey(apikeyProperties, 'LIBRE_TRANSLATE_ENDPOINT', "https://libretranslate.com/translate")
            buildConfigField "String", "DEEPL_API_KEY", getApiKey(apikeyProperties, 'DEEPL_API_KEY')
            buildConfigField "String", "MICROSOFT_TRANSLATOR_API_KEY", getApiKey(apikeyProperties, 'MICROSOFT_TRANSLATOR_API_KEY')
            buildConfigField "String", "YANDEX_TRANSLATE_API_KEY", getApiKey(apikeyProperties, 'YANDEX_TRANSLATE_API_KEY')
            
            // For backward compatibility
            buildConfigField "String", "TRANSLATE_API_KEY", getApiKey(apikeyProperties, 'GOOGLE_TRANSLATE_API_KEY')
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }
    
    packaging {
        resources {
            excludes += ['META-INF/INDEX.LIST', 'META-INF/DEPENDENCIES']
        }
    }
}

dependencies {
    // Core Android dependencies
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    
    // Architecture Components
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    
    // DataStore
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    
    // Room for database
    implementation 'androidx.room:room-runtime:2.5.1'
    implementation 'androidx.room:room-ktx:2.5.1'
    ksp 'androidx.room:room-compiler:2.5.1'
    
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    
    // Dagger Hilt for dependency injection
    implementation 'com.google.dagger:hilt-android:2.50'
    ksp 'com.google.dagger:hilt-android-compiler:2.50'
    
    // Retrofit for network requests
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    
    // Google Cloud Translation API
    implementation 'com.google.cloud:google-cloud-translate:2.3.0'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
